# Use Eclipse Temurin - it's the industry standard for production Spring apps
# OpenJDK 21 is the current LTS version most enterprises are adopting
FROM eclipse-temurin:17-jdk-alpine

# Set working directory
WORKDIR /app

# Install Maven (if you're using Maven) or skip if using Gradle
# Most enterprise Spring projects use Maven
RUN apk add --no-cache maven

# Copy Maven files first for better layer caching
# Critical for build performance - only re-downloads dependencies when pom.xml changes
COPY pom.xml ./
COPY src ./src

# RUN mvn clean install

# Alternative approach: Copy everything and let Maven handle it
# COPY . .

# Expose Spring Boot default port
EXPOSE 8080

# For development, we want hot reload, so we'll use spring-boot:run
# This runs the app with the Maven Spring Boot plugin which supports dev tools
CMD ["mvn", "spring-boot:run", "-Dspring-boot.run.profiles=dev"]

# Use spring-boot:run to trigger devtools-aware app startup
# CMD ["sh", "-c", "while true; do mvn compile && mvn spring-boot:run -Dspring-boot.run.profiles=dev; done"]
